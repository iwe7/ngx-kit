import { InjectionToken } from '@angular/core';
import { KitComponentStyle } from './component';
import { KitThemeService } from './theme';

export const kitTheme = new InjectionToken<KitThemeService>('kitTheme');
export const kitComponentAccordion = new InjectionToken<KitComponentStyle>('kitComponentAccordion');
export const kitComponentAccordionPanel = new InjectionToken<KitComponentStyle>('kitComponentAccordionPanel');
export const kitComponentAlert = new InjectionToken<KitComponentStyle>('kitComponentAlert');
export const kitComponentAlertTitle = new InjectionToken<KitComponentStyle>('kitComponentAlertTitle');
export const kitComponentAutoComplete = new InjectionToken<KitComponentStyle>('kitComponentAutoComplete');
export const kitComponentBadge = new InjectionToken<KitComponentStyle>('kitComponentBadge');
export const kitComponentButton = new InjectionToken<KitComponentStyle>('kitComponentButton');
export const kitComponentButtonGroup = new InjectionToken<KitComponentStyle>('kitComponentButtonGroup');
export const kitComponentCheckbox = new InjectionToken<KitComponentStyle>('kitComponentCheckbox');
export const kitComponentColorPicker = new InjectionToken<KitComponentStyle>('kitComponentColorPicker');
export const kitComponentColorPickerPopup = new InjectionToken<KitComponentStyle>('kitComponentColorPickerPopup');
export const kitComponentDatePicker = new InjectionToken<KitComponentStyle>('kitComponentDatePicker');
export const kitComponentDivider = new InjectionToken<KitComponentStyle>('kitComponentDivider');
export const kitComponentDropdownMenu = new InjectionToken<KitComponentStyle>('kitComponentDropdownMenu');
export const kitComponentDropdownMenuItem = new InjectionToken<KitComponentStyle>('kitComponentDropdownMenuItem');
export const kitComponentFormError = new InjectionToken<KitComponentStyle>('kitComponentFormError');
export const kitComponentFormGroup = new InjectionToken<KitComponentStyle>('kitComponentFormGroup');
export const kitComponentFormLabel = new InjectionToken<KitComponentStyle>('kitComponentFormLabel');
export const kitComponentInput = new InjectionToken<KitComponentStyle>('kitComponentInput');
export const kitComponentLayout = new InjectionToken<KitComponentStyle>('kitComponentLayout');
export const kitComponentLayoutContent = new InjectionToken<KitComponentStyle>('kitComponentLayoutContent');
export const kitComponentLayoutFooter = new InjectionToken<KitComponentStyle>('kitComponentLayoutFooter');
export const kitComponentLayoutHeader = new InjectionToken<KitComponentStyle>('kitComponentLayoutHeader');
export const kitComponentLayoutSide = new InjectionToken<KitComponentStyle>('kitComponentLayoutSide');
export const kitComponentLoadingBar = new InjectionToken<KitComponentStyle>('kitLoadingBar');
export const kitComponentMathInput = new InjectionToken<KitComponentStyle>('kitComponentMathInput');
export const kitComponentMenu = new InjectionToken<KitComponentStyle>('kitComponentMenu');
export const kitComponentMenuGroup = new InjectionToken<KitComponentStyle>('kitComponentMenuGroup');
export const kitComponentMenuGroupTitle = new InjectionToken<KitComponentStyle>('kitComponentMenuGroupTitle');
export const kitComponentMenuItem = new InjectionToken<KitComponentStyle>('kitComponentMenuItem');
export const kitComponentMenuSeparator = new InjectionToken<KitComponentStyle>('kitComponentMenuSeparator');
export const kitComponentMenuSub = new InjectionToken<KitComponentStyle>('kitComponentMenuSub');
export const kitComponentModal = new InjectionToken<KitComponentStyle>('kitComponentModal');
export const kitComponentModalBody = new InjectionToken<KitComponentStyle>('kitComponentModalBody');
export const kitComponentModalFooter = new InjectionToken<KitComponentStyle>('kitComponentModalFooter');
export const kitComponentModalHeader = new InjectionToken<KitComponentStyle>('kitComponentModalHeader');
export const kitComponentNotificationHost = new InjectionToken<KitComponentStyle>('kitComponentNotificationHost');
export const kitComponentOverlayContainer = new InjectionToken<KitComponentStyle>('kitComponentOverlayContainer');
export const kitComponentRadio = new InjectionToken<KitComponentStyle>('kitComponentRadio');
export const kitComponentRadioGroup = new InjectionToken<KitComponentStyle>('kitComponentRadioGroup');
export const kitComponentSelect = new InjectionToken<KitComponentStyle>('kitComponentSelect');
export const kitComponentSpinner = new InjectionToken<KitComponentStyle>('kitComponentSpinner');
export const kitComponentTabs = new InjectionToken<KitComponentStyle>('kitComponentTabs');
export const kitComponentTag = new InjectionToken<KitComponentStyle>('kitComponentTag');
export const kitComponentTextarea = new InjectionToken<KitComponentStyle>('kitComponentTextarea');
export const kitComponentToggle = new InjectionToken<KitComponentStyle>('kitComponentToggle');
export const kitComponentTooltipView = new InjectionToken<KitComponentStyle>('kitComponentTooltipView');
export const kitComponentTypoContainer = new InjectionToken<KitComponentStyle>('kitComponentTypoContainer');
